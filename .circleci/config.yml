version: 2.1

parameters:
  build-image:
    type: string
    default: "circleci/node:13.8.0"


jobs:
  build-backend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd backend
            npm install
      - run:
          name: Build
          command: |
            cd backend
            npm run build

  test-backend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd backend
            npm install
      - run:
          name: Test
          command: |
            cd backend
            npm run test

  analyze-backend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd backend
            npm install
      - run:
          name: Analyze
          command: |
            cd backend
            npm audit --audit-level=critical

  build-frontend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd frontend
            npm install
      - run:
          name: Build
          command: |
            cd frontend
            npm run build

  test-frontend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd frontend
            npm install
      - run:
          name: Test
          command: |
            cd frontend
            npm run test

  analyze-frontend:
    docker:
      - image: << pipeline.parameters.build-image >>
    steps:
      - checkout
      - run:
          name: Install
          command: |
            cd frontend
            npm install
      - run:
          name: Analyze
          command: |
            cd frontend
            npm audit --audit-level=critical

  create_backend_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Backend Infrastructure
          command: |
            aws cloudformation deploy \
              --stack-name superpowers \
              --template-file .circleci/files/backend.yml \
              --region us-west-2 \
              --parameter-overrides "ID=1"
            PUBLIC_DNS=$(aws ec2 describe-instances --query "Reservations[*].Instances[0].PublicDnsName"  --output text)  
            curl -H "Content-Type: text/plain" -H "token: bb9fa411-596b-45ef-ab32-8111e6af5491" --request PUT --data "$PUBLIC_DNS" https://api.memstash.io/values/
workflows:
  backend:
    jobs:
      - build-backend
      - test-backend:
          requires:
            - build-backend
      - analyze-backend:
          requires:
            - test-backend
      - create_backend_infrastructure:
          requires:
            - analyze-backend

  frontend:
    jobs:
      - build-frontend
      - test-frontend:
          requires:
            - build-frontend
      - analyze-frontend:
          requires:
            - test-frontend

